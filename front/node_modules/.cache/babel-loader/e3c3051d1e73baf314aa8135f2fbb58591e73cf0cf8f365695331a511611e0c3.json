{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useApi = (url, options = {}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!url) return;\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(`Error ${response.status}: ${response.statusText}`);\n        }\n        const result = await response.json();\n        setData(Array.isArray(result) ? result : []);\n      } catch (err) {\n        console.error('API fetch error:', err);\n        setError(err);\n        setData([]); // No mostrar datos si hay error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url, JSON.stringify(options)]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n_s(useApi, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\nexport default useApi;","map":{"version":3,"names":["useState","useEffect","useApi","url","options","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","status","statusText","result","json","Array","isArray","err","console","JSON","stringify"],"sources":["C:/Users/Usuario/Documents/3_FundaWeb/Prueba/front/src/hooks/useApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useApi = (url, options = {}) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!url) return;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch(url, options);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        setData(Array.isArray(result) ? result : []);\r\n      } catch (err) {\r\n        console.error('API fetch error:', err);\r\n        setError(err);\r\n        setData([]); // No mostrar datos si hay error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url, JSON.stringify(options)]);\r\n\r\n  return { data, loading, error };\r\n};\r\n\r\nexport default useApi;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,MAAM,GAAGA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACE,GAAG,EAAE;IAEV,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,IAAI,CAAC;QAEd,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAG,EAAEC,OAAO,CAAC;QAE1C,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,SAASH,QAAQ,CAACI,MAAM,KAAKJ,QAAQ,CAACK,UAAU,EAAE,CAAC;QACrE;QAEA,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACpCb,OAAO,CAACc,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,GAAGA,MAAM,GAAG,EAAE,CAAC;MAC9C,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZC,OAAO,CAACd,KAAK,CAAC,kBAAkB,EAAEa,GAAG,CAAC;QACtCZ,QAAQ,CAACY,GAAG,CAAC;QACbhB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;MACf,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,GAAG,EAAEsB,IAAI,CAACC,SAAS,CAACtB,OAAO,CAAC,CAAC,CAAC;EAElC,OAAO;IAAEE,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACjC,CAAC;AAACL,EAAA,CAlCIH,MAAM;AAoCZ,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}