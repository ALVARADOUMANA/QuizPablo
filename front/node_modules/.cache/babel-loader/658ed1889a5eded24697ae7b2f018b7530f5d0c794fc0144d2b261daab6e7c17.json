{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useEmpleados.js\nimport { useState, useEffect } from 'react';\nimport { obtenerEmpleados, obtenerEmpleadosPorId, crearEmpleado, actualizarEmpleado, eliminarEmpleado } from '../hooks/useApi';\nconst useEmpleados = () => {\n  _s();\n  const [empleados, setEmpleados] = useState([]);\n  const [empleadoSeleccionado, setEmpleadoSeleccionado] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [notification, setNotification] = useState({\n    show: false,\n    message: '',\n    type: ''\n  });\n  useEffect(() => {\n    fetchEmpleados();\n  }, []);\n  const fetchEmpleados = async () => {\n    try {\n      setLoading(true);\n      const response = await obtenerEmpleados();\n      console.log('Empleados:', response.data); // Debugging line\n      setEmpleados(response.data);\n      setError(null);\n    } catch (err) {\n      setError('No se pudieron cargar los datos de empleados');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchEmpleadoDetalle = async id => {\n    try {\n      const response = await obtenerEmpleadosPorId(id);\n      setEmpleadoSeleccionado(response.data);\n      return response.data;\n    } catch (err) {\n      showNotification('Error al obtener detalles del empleado', 'error');\n      return null;\n    }\n  };\n  const createEmpleado = async data => {\n    try {\n      await crearEmpleado(data);\n      showNotification('Empleado creado exitosamente', 'success');\n      await fetchEmpleados();\n      return true;\n    } catch (err) {\n      showNotification(`Error: ${err.message || 'Ha ocurrido un error al crear'}`, 'error');\n      return false;\n    }\n  };\n  const updateEmpleado = async (id, data) => {\n    try {\n      await actualizarEmpleado(data);\n      showNotification('Empleado actualizado exitosamente', 'success');\n      await fetchEmpleados();\n      return true;\n    } catch (err) {\n      showNotification(`Error: ${err.message || 'Ha ocurrido un error al actualizar'}`, 'error');\n      return false;\n    }\n  };\n  const deleteEmpleado = async id => {\n    try {\n      await eliminarEmpleado(id);\n      showNotification('Empleado eliminado exitosamente', 'success');\n      await fetchEmpleados();\n      return true;\n    } catch (err) {\n      showNotification(`Error: ${err.message || 'Ha ocurrido un error al eliminar'}`, 'error');\n      return false;\n    }\n  };\n  const showNotification = (message, type) => {\n    setNotification({\n      show: true,\n      message,\n      type\n    });\n    setTimeout(() => {\n      setNotification({\n        show: false,\n        message: '',\n        type: ''\n      });\n    }, 3000);\n  };\n  const formatSalario = salario => {\n    return new Intl.NumberFormat('es-MX', {\n      style: 'currency',\n      currency: 'MXN',\n      minimumFractionDigits: 0\n    }).format(salario);\n  };\n  return {\n    empleados,\n    empleadoSeleccionado,\n    loading,\n    error,\n    notification,\n    fetchEmpleados,\n    fetchEmpleadoDetalle,\n    createEmpleado,\n    updateEmpleado,\n    deleteEmpleado,\n    setEmpleadoSeleccionado,\n    formatSalario,\n    showNotification\n  };\n};\n_s(useEmpleados, \"sbBGv5oTT0D9YUvz+ine02IE1O8=\");\nexport default useEmpleados;","map":{"version":3,"names":["useState","useEffect","obtenerEmpleados","obtenerEmpleadosPorId","crearEmpleado","actualizarEmpleado","eliminarEmpleado","useEmpleados","_s","empleados","setEmpleados","empleadoSeleccionado","setEmpleadoSeleccionado","loading","setLoading","error","setError","notification","setNotification","show","message","type","fetchEmpleados","response","console","log","data","err","fetchEmpleadoDetalle","id","showNotification","createEmpleado","updateEmpleado","deleteEmpleado","setTimeout","formatSalario","salario","Intl","NumberFormat","style","currency","minimumFractionDigits","format"],"sources":["C:/Users/Usuario/Documents/3_FundaWeb/Prueba/front/src/hooks/useEmpleados.js"],"sourcesContent":["// hooks/useEmpleados.js\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n    obtenerEmpleados,\r\n    obtenerEmpleadosPorId,\r\n    crearEmpleado,\r\n    actualizarEmpleado,\r\n    eliminarEmpleado\r\n} from '../hooks/useApi';\r\n\r\nconst useEmpleados = () => {\r\n    const [empleados, setEmpleados] = useState([]);\r\n    const [empleadoSeleccionado, setEmpleadoSeleccionado] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [notification, setNotification] = useState({ show: false, message: '', type: '' });\r\n\r\n    useEffect(() => {\r\n        fetchEmpleados();\r\n    }, []);\r\n\r\n    const fetchEmpleados = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await obtenerEmpleados();\r\n            console.log('Empleados:', response.data); // Debugging line\r\n            setEmpleados(response.data);\r\n            setError(null);\r\n        } catch (err) {\r\n            setError('No se pudieron cargar los datos de empleados');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchEmpleadoDetalle = async (id) => {\r\n        try {\r\n            const response = await obtenerEmpleadosPorId(id);\r\n            setEmpleadoSeleccionado(response.data);\r\n            return response.data;\r\n        } catch (err) {\r\n            showNotification('Error al obtener detalles del empleado', 'error');\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const createEmpleado = async (data) => {\r\n        try {\r\n            await crearEmpleado(data);\r\n            showNotification('Empleado creado exitosamente', 'success');\r\n            await fetchEmpleados();\r\n            return true;\r\n        } catch (err) {\r\n            showNotification(`Error: ${err.message || 'Ha ocurrido un error al crear'}`, 'error');\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const updateEmpleado = async (id, data) => {\r\n        try {\r\n\r\n            await actualizarEmpleado( data);\r\n            showNotification('Empleado actualizado exitosamente', 'success');\r\n            await fetchEmpleados();\r\n            return true;\r\n        } catch (err) {\r\n            showNotification(`Error: ${err.message || 'Ha ocurrido un error al actualizar'}`, 'error');\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const deleteEmpleado = async (id) => {\r\n        try {\r\n            await eliminarEmpleado(id);\r\n            showNotification('Empleado eliminado exitosamente', 'success');\r\n            await fetchEmpleados();\r\n            return true;\r\n        } catch (err) {\r\n            showNotification(`Error: ${err.message || 'Ha ocurrido un error al eliminar'}`, 'error');\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const showNotification = (message, type) => {\r\n        setNotification({ show: true, message, type });\r\n        setTimeout(() => {\r\n            setNotification({ show: false, message: '', type: '' });\r\n        }, 3000);\r\n    };\r\n\r\n    const formatSalario = (salario) => {\r\n        return new Intl.NumberFormat('es-MX', {\r\n            style: 'currency',\r\n            currency: 'MXN',\r\n            minimumFractionDigits: 0\r\n        }).format(salario);\r\n    };\r\n\r\n    return {\r\n        empleados,\r\n        empleadoSeleccionado,\r\n        loading,\r\n        error,\r\n        notification,\r\n        fetchEmpleados,\r\n        fetchEmpleadoDetalle,\r\n        createEmpleado,\r\n        updateEmpleado,\r\n        deleteEmpleado,\r\n        setEmpleadoSeleccionado,\r\n        formatSalario,\r\n        showNotification\r\n    };\r\n};\r\n\r\nexport default useEmpleados;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}